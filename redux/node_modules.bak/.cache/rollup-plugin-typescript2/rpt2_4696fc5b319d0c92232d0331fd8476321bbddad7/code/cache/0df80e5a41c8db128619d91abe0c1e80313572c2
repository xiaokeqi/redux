{"code":"import ActionTypes from './utils/actionTypes';\r\nimport warning from './utils/warning';\r\nimport isPlainObject from './utils/isPlainObject';\r\nfunction getUndefinedStateErrorMessage(key, action) {\r\n    const actionType = action && action.type;\r\n    const actionDescription = (actionType && `action \"${String(actionType)}\"`) || 'an action';\r\n    return (`Given ${actionDescription}, reducer \"${key}\" returned undefined. ` +\r\n        `To ignore an action, you must explicitly return the previous state. ` +\r\n        `If you want this reducer to hold no value, you can return null instead of undefined.`);\r\n}\r\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\r\n    const reducerKeys = Object.keys(reducers);\r\n    const argumentName = action && action.type === ActionTypes.INIT\r\n        ? 'preloadedState argument passed to createStore'\r\n        : 'previous state received by the reducer';\r\n    if (reducerKeys.length === 0) {\r\n        return ('Store does not have a valid reducer. Make sure the argument passed ' +\r\n            'to combineReducers is an object whose values are reducers.');\r\n    }\r\n    if (!isPlainObject(inputState)) {\r\n        const match = Object.prototype.toString\r\n            .call(inputState)\r\n            .match(/\\s([a-z|A-Z]+)/);\r\n        const matchType = match ? match[1] : '';\r\n        return (`The ${argumentName} has unexpected type of \"` +\r\n            matchType +\r\n            `\". Expected argument to be an object with the following ` +\r\n            `keys: \"${reducerKeys.join('\", \"')}\"`);\r\n    }\r\n    const unexpectedKeys = Object.keys(inputState).filter(key => !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]);\r\n    unexpectedKeys.forEach(key => {\r\n        unexpectedKeyCache[key] = true;\r\n    });\r\n    if (action && action.type === ActionTypes.REPLACE)\r\n        return;\r\n    if (unexpectedKeys.length > 0) {\r\n        return (`Unexpected ${unexpectedKeys.length > 1 ? 'keys' : 'key'} ` +\r\n            `\"${unexpectedKeys.join('\", \"')}\" found in ${argumentName}. ` +\r\n            `Expected to find one of the known reducer keys instead: ` +\r\n            `\"${reducerKeys.join('\", \"')}\". Unexpected keys will be ignored.`);\r\n    }\r\n}\r\nfunction assertReducerShape(reducers) {\r\n    Object.keys(reducers).forEach(key => {\r\n        const reducer = reducers[key];\r\n        const initialState = reducer(undefined, { type: ActionTypes.INIT });\r\n        if (typeof initialState === 'undefined') {\r\n            throw new Error(`Reducer \"${key}\" returned undefined during initialization. ` +\r\n                `If the state passed to the reducer is undefined, you must ` +\r\n                `explicitly return the initial state. The initial state may ` +\r\n                `not be undefined. If you don't want to set a value for this reducer, ` +\r\n                `you can use null instead of undefined.`);\r\n        }\r\n        if (typeof reducer(undefined, {\r\n            type: ActionTypes.PROBE_UNKNOWN_ACTION()\r\n        }) === 'undefined') {\r\n            throw new Error(`Reducer \"${key}\" returned undefined when probed with a random type. ` +\r\n                `Don't try to handle ${ActionTypes.INIT} or other actions in \"redux/*\" ` +\r\n                `namespace. They are considered private. Instead, you must return the ` +\r\n                `current state for any unknown actions, unless it is undefined, ` +\r\n                `in which case you must return the initial state, regardless of the ` +\r\n                `action type. The initial state may not be undefined, but can be null.`);\r\n        }\r\n    });\r\n}\r\nexport default function combineReducers(reducers) {\r\n    const reducerKeys = Object.keys(reducers);\r\n    const finalReducers = {};\r\n    for (let i = 0; i < reducerKeys.length; i++) {\r\n        const key = reducerKeys[i];\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (typeof reducers[key] === 'undefined') {\r\n                warning(`No reducer provided for key \"${key}\"`);\r\n            }\r\n        }\r\n        if (typeof reducers[key] === 'function') {\r\n            finalReducers[key] = reducers[key];\r\n        }\r\n    }\r\n    const finalReducerKeys = Object.keys(finalReducers);\r\n    // This is used to make sure we don't warn about the same\r\n    // keys multiple times.\r\n    let unexpectedKeyCache;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        unexpectedKeyCache = {};\r\n    }\r\n    let shapeAssertionError;\r\n    try {\r\n        assertReducerShape(finalReducers);\r\n    }\r\n    catch (e) {\r\n        shapeAssertionError = e;\r\n    }\r\n    return function combination(state = {}, action) {\r\n        if (shapeAssertionError) {\r\n            throw shapeAssertionError;\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            const warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\r\n            if (warningMessage) {\r\n                warning(warningMessage);\r\n            }\r\n        }\r\n        let hasChanged = false;\r\n        const nextState = {};\r\n        for (let i = 0; i < finalReducerKeys.length; i++) {\r\n            const key = finalReducerKeys[i];\r\n            const reducer = finalReducers[key];\r\n            const previousStateForKey = state[key];\r\n            const nextStateForKey = reducer(previousStateForKey, action);\r\n            if (typeof nextStateForKey === 'undefined') {\r\n                const errorMessage = getUndefinedStateErrorMessage(key, action);\r\n                throw new Error(errorMessage);\r\n            }\r\n            nextState[key] = nextStateForKey;\r\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\r\n        }\r\n        hasChanged =\r\n            hasChanged || finalReducerKeys.length !== Object.keys(state).length;\r\n        return hasChanged ? nextState : state;\r\n    };\r\n}\r\n//# sourceMappingURL=combineReducers.js.map","references":["/Users/lidandan/beike/demo/redux/src/types/reducers.ts","/Users/lidandan/beike/demo/redux/src/types/actions.ts","/Users/lidandan/beike/demo/redux/src/utils/actionTypes.ts","/Users/lidandan/beike/demo/redux/src/utils/warning.ts","/Users/lidandan/beike/demo/redux/src/utils/isPlainObject.ts","/Users/lidandan/beike/demo/redux/src/types/reducers.ts","/Users/lidandan/beike/demo/redux/src/types/store.ts"],"map":"{\"version\":3,\"file\":\"combineReducers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/combineReducers.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/lidandan/beike/demo/redux/types/combineReducers.d.ts","writeByteOrderMark":false,"text":"import { Reducer } from './types/reducers';\r\nimport { AnyAction, Action } from './types/actions';\r\nimport { ReducersMapObject, StateFromReducersMapObject, ActionFromReducersMapObject } from './types/reducers';\r\nimport { CombinedState } from './types/store';\r\n/**\r\n * Turns an object whose values are different reducer functions, into a single\r\n * reducer function. It will call every child reducer, and gather their results\r\n * into a single state object, whose keys correspond to the keys of the passed\r\n * reducer functions.\r\n *\r\n * @template S Combined state object type.\r\n *\r\n * @param reducers An object whose values correspond to different reducer\r\n *   functions that need to be combined into one. One handy way to obtain it\r\n *   is to use ES6 `import * as reducers` syntax. The reducers may never\r\n *   return undefined for any action. Instead, they should return their\r\n *   initial state if the state passed to them was undefined, and the current\r\n *   state for any unrecognized action.\r\n *\r\n * @returns A reducer function that invokes every reducer inside the passed\r\n *   object, and builds a state object with the same shape.\r\n */\r\nexport default function combineReducers<S>(reducers: ReducersMapObject<S, any>): Reducer<CombinedState<S>>;\r\nexport default function combineReducers<S, A extends Action = AnyAction>(reducers: ReducersMapObject<S, A>): Reducer<CombinedState<S>, A>;\r\nexport default function combineReducers<M extends ReducersMapObject<any, any>>(reducers: M): Reducer<CombinedState<StateFromReducersMapObject<M>>, ActionFromReducersMapObject<M>>;\r\n"}}
